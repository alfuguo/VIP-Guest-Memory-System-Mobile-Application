# Production Configuration for VIP Guest Memory System

# Server Configuration
server.port=${PORT:8080}
server.servlet.context-path=/
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# Database Configuration
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:vip_guest_system}
spring.datasource.username=${DB_USER:vip_user}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.leak-detection-threshold=60000

# JPA Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Redis Configuration (for caching and sessions)
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.timeout=2000ms
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0

# JWT Configuration
app.jwt.secret=${JWT_SECRET}
app.jwt.expiration=${JWT_EXPIRATION:900000}
app.jwt.refresh-expiration=${JWT_REFRESH_EXPIRATION:604800000}

# File Upload Configuration
app.upload.dir=${UPLOAD_DIR:/app/uploads}
app.upload.max-file-size=${MAX_FILE_SIZE:5MB}
app.upload.max-request-size=10MB
app.upload.allowed-extensions=jpg,jpeg,png,gif,webp

# CORS Configuration
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:https://yourdomain.com}
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=*
app.cors.allow-credentials=true
app.cors.max-age=3600

# Security Configuration
app.security.password-encoder-strength=12
app.security.max-login-attempts=5
app.security.lockout-duration=1800000
app.security.session-timeout=1800000

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=always
management.health.db.enabled=true
management.health.redis.enabled=true
management.metrics.export.prometheus.enabled=true

# Logging Configuration
logging.level.com.restaurant.vip=INFO
logging.level.org.springframework.security=WARN
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.level.org.springframework.data.redis=WARN

# Log file configuration (directory will be created automatically)
logging.file.name=/app/logs/application.log
logging.file.max-size=100MB
logging.file.max-history=30
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# Jackson Configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=UTC
spring.jackson.default-property-inclusion=NON_NULL

# Multipart Configuration
spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE:5MB}
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.enabled=true

# Application Information
info.app.name=${APP_NAME:VIP Guest Memory System}
info.app.version=${APP_VERSION:1.0.0}
info.app.environment=${APP_ENVIRONMENT:production}

# Performance Tuning
server.tomcat.threads.max=200
server.tomcat.threads.min-spare=10
server.tomcat.accept-count=100
server.tomcat.max-connections=8192

# SSL Configuration (if terminating SSL at application level)
# server.ssl.enabled=true
# server.ssl.key-store=${SSL_KEYSTORE_PATH}
# server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD}
# server.ssl.key-store-type=PKCS12

# External Service Configuration (if using cloud storage)
# AWS S3 Configuration
# aws.s3.bucket=${AWS_S3_BUCKET}
# aws.s3.region=${AWS_REGION:us-east-1}
# aws.access-key-id=${AWS_ACCESS_KEY_ID}
# aws.secret-access-key=${AWS_SECRET_ACCESS_KEY}

# Email Configuration (for notifications)
# spring.mail.host=${SMTP_HOST}
# spring.mail.port=${SMTP_PORT:587}
# spring.mail.username=${SMTP_USERNAME}
# spring.mail.password=${SMTP_PASSWORD}
# spring.mail.properties.mail.smtp.auth=true
# spring.mail.properties.mail.smtp.starttls.enable=true

# Monitoring Configuration
# Sentry for error tracking
# sentry.dsn=${SENTRY_DSN}
# sentry.environment=${APP_ENVIRONMENT:production}

# Cache Configuration
spring.cache.type=redis
spring.cache.redis.time-to-live=3600000
spring.cache.redis.cache-null-values=false

# Additional Security Headers
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict